generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 테이블 모델 생성 가능: 최소한 한개의 고유한 키값 필요(pk)
model User {
  id         Int        @id @default(autoincrement()) // 자동증가
  name       String     @unique
  email      String?    @unique // String? 이면 null 허용
  password   String?
  phone      String?    @unique
  github_id  String?    @unique
  avatar     String?    @default("https://cdn-icons-png.flaticon.com/512/17561/17561566.png") // 깃허브 계정의 이미지
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt // @updatedAt: 사용자가 수정될때마다 수정시간을 부여해줄 것임.
  SMSToken   SMSToken[]
  Product    Product[]
}

// 사용자 - 토큰 연결 필요(phone으로 토큰값을 전달을 주고받아야 하기 때문)
// user -> phone -> sms(token)
// token -> SMS Token <-> user
model SMSToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // relation 설정: Prisma, DB에게 어떤 값을 찾아야할지 방향을 정해줌
  // Cascade: User 삭제 시, 연관된 SMSTokem 데이터 또한 삭제
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int // 실제DB에서는 이 값이 저장됨
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  price       Float
  description String
  photo       String // image는 클라우드에 업로드하고 url string을 저장할 것임.
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}
